<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8" />
    <title>Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        body {
            background-color: #f0f2f5;
            font-family: 'Segoe UI', sans-serif;
        }

        .sidebar {
            background-color: #1f2937;
            color: white;
            padding: 2rem 1rem;
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            width: 250px;
            transform: translateX(0);
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .sidebar.collapsed {
            transform: translateX(-100%);
        }

        .sidebar h2 {
            font-size: 1.5rem;
            margin-bottom: 2rem;
        }

        .sidebar a {
            color: #cbd5e1;
            text-decoration: none;
            display: block;
            margin: 1rem 0;
            transition: 0.2s;
        }

        .sidebar a:hover {
            color: white;
        }

        .dashboard-content {
            margin-left: 250px;
            padding: 2rem;
            transition: margin-left 0.3s ease;
        }

        .dashboard-content.full-width {
            margin-left: 0;
        }

        .card-custom {
            border: none;
            border-radius: 1rem;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
        }

        .balance {
            font-size: 2rem;
            font-weight: 600;
            color: #16a34a;
        }

        .info-title {
            font-size: 0.9rem;
            color: #6b7280;
        }

        .info-value {
            font-size: 1.1rem;
            font-weight: 500;
        }

        .top-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .logout-btn {
            color: #6b7280;
            text-decoration: none;
        }

        .logout-btn:hover {
            color: #ef4444;
        }

        .menu-toggle {
            background: none;
            border: none;
            font-size: 1.8rem;
            color: #1f2937;
            margin-right: 1rem;
        }

        

        

        /* Responsividade */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.open {
                transform: translateX(0);
            }

            .dashboard-content {
                margin-left: 0;
            }

            .dashboard-content.full-width {
                margin-left: 0;
            }
        }
    </style>
</head>

<body>

    
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <h2><i class="bi bi-bank"></i> MyBank</h2>
        <a id="start" href="#"><i class="bi bi-speedometer2"></i> Inicio</a>
        <a id="linkDebts" href="#"><i class="bi bi-wallet2"></i> Dividas</a>
        <a id="sidebarLogout" href="/logout"><i class="bi bi-door-closed"></i> Sair</a>
    </div>

    <!-- Main Content -->
    <div class="dashboard-content" id="main">
        <div class="top-bar">
            <div class="d-flex align-items-center">
                <button class="menu-toggle" onclick="toggleSidebar()"><i class="bi bi-list"></i></button>
                <h3 class="mb-0">Ol√°, <%= nome %> üëã</h3>
            </div>
            <a id="topbarLogout" href="/logout" class="logout-btn"><i class="bi bi-box-arrow-right"></i> Sair</a>
        </div>

        <div class="row g-4 infoCustom " id="infoCustomer">
            <div class="col-md-6">
                <div class="card card-custom p-4">
                    <div class="info-title">Saldo dispon√≠vel</div>
                    <div class="balance">R$ <%= saldo %></div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card card-custom p-4">
                    <div class="info-title">N√∫mero da conta</div>
                    <div class="info-value">
                        <%= numeroConta %>
                    </div>
                    <div class="info-title mt-3">E-mail</div>
                    <div class="info-value">
                        <%= email %>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-5 charges " id="charges">
            <div class="col">
                
            </div>
        </div>

        <!-- Dividas gerais  -->
        <div class="row mt-5 generalDebts d-none" id="generalDebts">
            <div class="col">
                <h5 class="mb-3">D√≠vidas</h5>
                <div id="debtsContainer"></div>
            </div>

            <nav aria-label="paginacao" class="mt-3">
                <ul class="pagination justify-content-center">
                    <li class="page-item" id="page-prev-divida">
                        <button class="page-link">Anterior</button>
                    </li>
                    <li class="page-item disabled">
                        <span class="page-link" id="pagina-atual-dividas">1</span>
                    </li>
                    <li class="page-item" id="page-next-divida">
                        <button class="page-link">Pr√≥ximo</button>
                    </li>
                </ul>
            </nav>
        </div>

        
        <!-- Dividas Pendentes -->
        <div class="container-fluid mt-4" id="dividasPendentesContainer">
            <h3 class="mb-4">D√≠vidas Pendentes</h3>
        
            <div id="lista-dividas" class="list-group"></div>
        
            <nav aria-label="paginacao" class="mt-3">
                <ul class="pagination justify-content-center">
                    <li class="page-item" id="page-prev">
                        <button class="page-link">Anterior</button>
                    </li>
                    <li class="page-item disabled">
                        <span class="page-link" id="pagina-atual">1</span>
                    </li>
                    <li class="page-item" id="page-next">
                        <button class="page-link">Pr√≥ximo</button>
                    </li>
                </ul>
            </nav>  
        </div>

        <!-- Modal Detalhes Dividas Pendentes -->
        <div class="modal fade" id="modalDetalhes" tabindex="-1" aria-labelledby="modalDetalhesLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalDetalhesLabel">Detalhes da D√≠vida</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                    </div>
                    <div class="modal-body">
                        <p><strong>ID:</strong> <span id="modal-id"></span></p>
                        <p><strong>Descri√ß√£o:</strong> <span id="modal-descricao"></span></p>
                        <p><strong>Valor:</strong> R$ <span id="modal-valor"></span></p>
                        <p><strong>Vencimento:</strong> <span id="modal-vencimento"></span></p>
                        <p><strong>Status:</strong> <span id="modal-status"></span></p>
                        <p><strong>Pix TxId:</strong> <span id="modal-pixTxId"></span></p>
                        <p><strong>Pix Payload:</strong>
                        <pre id="modal-pixPayload" style="white-space: pre-wrap; word-wrap: break-word;"></pre>
                        </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Toast-->
        <div id="toastLogout" class="toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-4"
            role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Logout realizado com sucesso!
                </div>
            </div>
        </div>
  
        
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const listaDividas = document.getElementById('lista-dividas');
            const btnPrev = document.getElementById('page-prev');
            const btnNext = document.getElementById('page-next');
            const paginaAtualSpan = document.getElementById('pagina-atual');

            const modal = new bootstrap.Modal(document.getElementById('modalDetalhes'));
            const modalId = document.getElementById('modal-id');
            const modalDescricao = document.getElementById('modal-descricao');
            const modalValor = document.getElementById('modal-valor');
            const modalVencimento = document.getElementById('modal-vencimento');
            const modalStatus = document.getElementById('modal-status');
            const modalPixTxId = document.getElementById('modal-pixTxId');
            const modalPixPayload = document.getElementById('modal-pixPayload');

            let paginaAtual = 1;
            const limite = 5;

            async function carregarDividas(pagina) {
                try {
                    const response = await fetch(`/dividas/pendentes?page=${pagina}&limit=${limite}`, {
                        headers: {
                            'Authorization': 'Bearer ' + localStorage.getItem('token')
                        }
                    });

                    const data = await response.json();

                    if (data.status !== 'ok') {
                        listaDividas.innerHTML = `<div class="alert alert-danger">Erro ao carregar d√≠vidas</div>`;
                        return;
                    }

                    const dividas = data.dividas;

                    if (dividas.length === 0 && pagina > 1) {
                        paginaAtual--;
                        return;
                    }

                    listaDividas.innerHTML = '';

                    dividas.forEach(divida => {
                        const item = document.createElement('button');
                        item.type = 'button';
                        item.className = 'list-group-item list-group-item-action';
                        item.innerHTML = `
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">${divida.description}</h5>
                                <i class="bi bi-info-circle text-secondary debt-info-icon" title="Clique para ver detalhes"></i>
                            </div>
                            <p class="mb-1">Valor: R$ ${divida.amount.toFixed(2)}</p>
                            <small>Status: <span class="badge bg-warning text-dark">${divida.status}</span></small>
                        `;
                        item.addEventListener('click', () => mostrarDetalhes(divida));
                        listaDividas.appendChild(item);
                    });

                    paginaAtualSpan.textContent = paginaAtual;
                    btnPrev.classList.toggle('disabled', paginaAtual === 1);
                    btnNext.classList.toggle('disabled', dividas.length < limite);

                } catch (error) {
                    listaDividas.innerHTML = `<div class="alert alert-danger">Erro ao carregar d√≠vidas</div>`;
                    console.error(error);
                }
            }

            function mostrarDetalhes(divida) {
                modalId.textContent = divida.id;
                modalDescricao.textContent = divida.description;
                modalValor.textContent = divida.amount.toFixed(2);
                modalVencimento.textContent = new Date(divida.dueDate).toLocaleDateString();
                modalStatus.textContent = divida.status;
                modalPixTxId.textContent = divida.pixTxId || '-';
                modalPixPayload.textContent = divida.pixPayload || '-';
                modal.show();
            }

            btnPrev.querySelector('button').addEventListener('click', () => {
                if (paginaAtual > 1) {
                    paginaAtual--;
                    carregarDividas(paginaAtual);
                }
            });

            btnNext.querySelector('button').addEventListener('click', () => {
                paginaAtual++;
                carregarDividas(paginaAtual);
            });

            carregarDividas(paginaAtual);
        });
    </script>

    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const main = document.getElementById('main');

            sidebar.classList.toggle('collapsed');
            sidebar.classList.toggle('open'); // Para mobile
            main.classList.toggle('full-width');
        }
    </script>
        
    <script>
        function handleLogoutClick(event) {
            event.preventDefault();

            fetch('/logout', {
                method: 'POST',
                headers: {
                    'Content-type': 'application/json'
                },
                credentials: "include",
            })
                .then(res => res.json().then(data => ({ status: res.status, body: data })))
                .then(({ status, body }) => {
                    if (status === 200) {
                        const toast = document.getElementById('toastLogout');
                        toast.classList.add('show');

                        setTimeout(() => {
                            window.location.href = '/';
                        }, 2000);
                    } else {
                        alert(body.message || 'Erro ao fazer logout.');
                    }
                })
                .catch(() => alert('Erro inesperado ao fazer logout.'));
        }

        document.getElementById('sidebarLogout').addEventListener('click', handleLogoutClick);
        document.getElementById('topbarLogout').addEventListener('click', handleLogoutClick);
    </script>

    <script>
        let listaDividas = document.getElementById('lista-dividas');
        let btnPrevD = document.getElementById('page-prev-divida');
        let btnNextD = document.getElementById('page-next-divida');
        let paginaAtualSpan = document.getElementById('pagina-atual-dividas');

        let linkDebts = document.getElementById('linkDebts');
        let linkStart = document.getElementById('start');
        let divGeneralDebts = document.getElementById('generalDebts');
        let divCharges = document.getElementById('charges');
        let divInfoCustomer = document.getElementById('infoCustomer');
        let debtsContainer = document.getElementById('debtsContainer');
        let dividasPendentes = document.getElementById('dividasPendentesContainer');

        let paginaAtual = 1;
        const limite = 5;

        linkDebts.addEventListener('click', async function (e) {
            e.preventDefault();
            divGeneralDebts.classList.remove('d-none');
            divCharges.classList.add('d-none');
            divInfoCustomer.classList.add('d-none');
            dividasPendentes.classList.add('d-none');
            paginaAtual = 1;
            await carregarDividas(paginaAtual);
        });

        linkStart.addEventListener('click', function (e) {
            e.preventDefault();
            divGeneralDebts.classList.add('d-none');
            divCharges.classList.remove('d-none');
            divInfoCustomer.classList.remove('d-none');
            dividasPendentes.classList.remove('d-none');
        });

        btnNextD.addEventListener('click', async () => {
            paginaAtual++;
            await carregarDividas(paginaAtual);
        });

        btnPrevD.addEventListener('click', async () => {
            if (paginaAtual > 1) {
                paginaAtual--;
                await carregarDividas(paginaAtual);
            }
        });

        async function carregarDividas(paginaAtual) {
            try {
                const res = await fetch(`/dividas/todas?page=${paginaAtual}&limit=${limite}`, {
                    headers: {
                        'Content-type': 'application/json'
                    },
                });

                const { status, body } = {
                    status: res.status,
                    body: await res.json()
                };

                if (status === 200) {
                    renderDebts(body.dividas);

                    paginaAtualSpan.textContent = paginaAtual;

                    // Acessar os bot√µes reais dentro dos <li>
                    const btnPrevReal = btnPrevD.querySelector('button');
                    const btnNextReal = btnNextD.querySelector('button');

                    const isFirstPage = paginaAtual === 1;
                    const isLastPage = body.dividas.length < limite;

                    // Atualiza visual e funcionalmente os bot√µes
                    btnPrevD.classList.toggle('disabled', isFirstPage);
                    btnPrevReal.disabled = isFirstPage;

                    btnNextD.classList.toggle('disabled', isLastPage);
                    btnNextReal.disabled = isLastPage;
                } else {
                    alert(body.message || 'Erro ao buscar d√≠vidas.');
                }
            } catch (err) {
                alert('Erro inesperado ao buscar d√≠vidas.');
                console.error(err);
            }
        }

        function renderDebts(dividas) {
            debtsContainer.innerHTML = '';

            if (!dividas || dividas.length === 0) {
                debtsContainer.innerHTML = `
                    <div class="card card-custom p-4 text-center text-muted">
                        <i class="bi bi-exclamation-circle fs-4 mb-2"></i>
                        <p class="mb-0">Voc√™ ainda n√£o possui cobran√ßas registradas.</p>
                    </div>
                `;
                return;
            }

            const row = document.createElement('div');
            row.className = 'row row-cols-1 row-cols-md-2 g-4';

            dividas.forEach(divida => {
                const statusClass =
                    divida.status === 'pendente' ? 'bg-warning text-dark' :
                        divida.status === 'paga' ? 'bg-success' :
                            'bg-danger';

                const card = document.createElement('div');
                card.className = 'col';
                card.innerHTML = `
                    <div class="card card-custom p-4 h-100 d-flex flex-column justify-content-between">
                        <div>
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <strong>${divida.description}</strong>
                                <i class="bi bi-info-circle text-secondary debt-info-icon" data-id="${divida.id}"
                                                        data-description="${divida.description}" data-amount="${divida.amount}" data-status="${divida.status}"
                                                        data-created="${divida.createdAt}" data-due="${divida.dueDate}" title="Clique para ver detalhes"></i>
                            </div>
                            <p class="mb-1">Valor: <strong>R$ ${divida.amount.toFixed(2)}</strong></p>
                            <p class="mb-1">
                                Status:
                                <span class="badge ${statusClass}">${divida.status}</span>
                            </p>
                            <p class="text-muted small mb-0">Vencimento: ${new Date(divida.dueDate).toLocaleDateString()}</p>
                        </div>
                        ${divida.status === 'pendente' ? `
                            <a href="/pagar/${divida.id}" class="btn btn-sm btn-outline-success mt-3">
                                <i class="bi bi-cash-coin"></i> Pagar
                            </a>` : ''}
                    </div>
                `;
                row.appendChild(card);
            });

            debtsContainer.appendChild(row);
        }
    </script>

    <script>
        // Fun√ß√£o para abrir o modal de detalhes da d√≠vida
        document.addEventListener('click', function (e) {
            if (e.target.classList.contains('debt-info-icon')) {
                const icon = e.target;

                // Pega os dados do dataset do √≠cone
                const descricao = icon.dataset.description;
                const valor = parseFloat(icon.dataset.amount).toFixed(2);
                const status = icon.dataset.status;
                const criadoEm = new Date(icon.dataset.created).toLocaleDateString();
                const vencimento = new Date(icon.dataset.due).toLocaleDateString();
                const id = icon.dataset.id;

                // Preenche os campos do modal
                document.getElementById('modalDescricao').textContent = descricao;
                document.getElementById('modalValor').textContent = valor;
                document.getElementById('modalStatus').textContent = status;
                document.getElementById('modalCriacao').textContent = criadoEm;
                document.getElementById('modalVencimento').textContent = vencimento;
                document.getElementById('modalId').textContent = id;

                // Abre o modal usando Bootstrap
                const modal = new bootstrap.Modal(document.getElementById('modalDetalhesDivida'));
                modal.show();
            }
        });
    </script>
</body>

</html>